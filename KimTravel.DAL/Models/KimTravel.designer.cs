#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KimTravel.DAL.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KimTravelDesktop")]
	public partial class KimTravelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertApplicationRole(ApplicationRole instance);
    partial void UpdateApplicationRole(ApplicationRole instance);
    partial void DeleteApplicationRole(ApplicationRole instance);
    partial void InsertTour(Tour instance);
    partial void UpdateTour(Tour instance);
    partial void DeleteTour(Tour instance);
    partial void InsertApplicationUser(ApplicationUser instance);
    partial void UpdateApplicationUser(ApplicationUser instance);
    partial void DeleteApplicationUser(ApplicationUser instance);
    partial void InsertApplicationUserRole(ApplicationUserRole instance);
    partial void UpdateApplicationUserRole(ApplicationUserRole instance);
    partial void DeleteApplicationUserRole(ApplicationUserRole instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertCar(Car instance);
    partial void UpdateCar(Car instance);
    partial void DeleteCar(Car instance);
    partial void InsertGroupTour(GroupTour instance);
    partial void UpdateGroupTour(GroupTour instance);
    partial void DeleteGroupTour(GroupTour instance);
    partial void InsertPartner(Partner instance);
    partial void UpdatePartner(Partner instance);
    partial void DeletePartner(Partner instance);
    partial void InsertServiceType(ServiceType instance);
    partial void UpdateServiceType(ServiceType instance);
    partial void DeleteServiceType(ServiceType instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertCarType(CarType instance);
    partial void UpdateCarType(CarType instance);
    partial void DeleteCarType(CarType instance);
    partial void InsertGroupPartner(GroupPartner instance);
    partial void UpdateGroupPartner(GroupPartner instance);
    partial void DeleteGroupPartner(GroupPartner instance);
    partial void InsertPrice(Price instance);
    partial void UpdatePrice(Price instance);
    partial void DeletePrice(Price instance);
    partial void InsertPrintTour(PrintTour instance);
    partial void UpdatePrintTour(PrintTour instance);
    partial void DeletePrintTour(PrintTour instance);
    partial void InsertDetailPrintTour(DetailPrintTour instance);
    partial void UpdateDetailPrintTour(DetailPrintTour instance);
    partial void DeleteDetailPrintTour(DetailPrintTour instance);
    partial void InsertTempBookCar(TempBookCar instance);
    partial void UpdateTempBookCar(TempBookCar instance);
    partial void DeleteTempBookCar(TempBookCar instance);
    #endregion
		
		public KimTravelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KimTravelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KimTravelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KimTravelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ApplicationRole> ApplicationRoles
		{
			get
			{
				return this.GetTable<ApplicationRole>();
			}
		}
		
		public System.Data.Linq.Table<Tour> Tours
		{
			get
			{
				return this.GetTable<Tour>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationUser> ApplicationUsers
		{
			get
			{
				return this.GetTable<ApplicationUser>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationUserRole> ApplicationUserRoles
		{
			get
			{
				return this.GetTable<ApplicationUserRole>();
			}
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<Car> Cars
		{
			get
			{
				return this.GetTable<Car>();
			}
		}
		
		public System.Data.Linq.Table<GroupTour> GroupTours
		{
			get
			{
				return this.GetTable<GroupTour>();
			}
		}
		
		public System.Data.Linq.Table<Partner> Partners
		{
			get
			{
				return this.GetTable<Partner>();
			}
		}
		
		public System.Data.Linq.Table<ServiceType> ServiceTypes
		{
			get
			{
				return this.GetTable<ServiceType>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<CarType> CarTypes
		{
			get
			{
				return this.GetTable<CarType>();
			}
		}
		
		public System.Data.Linq.Table<GroupPartner> GroupPartners
		{
			get
			{
				return this.GetTable<GroupPartner>();
			}
		}
		
		public System.Data.Linq.Table<Price> Prices
		{
			get
			{
				return this.GetTable<Price>();
			}
		}
		
		public System.Data.Linq.Table<PrintTour> PrintTours
		{
			get
			{
				return this.GetTable<PrintTour>();
			}
		}
		
		public System.Data.Linq.Table<DetailPrintTour> DetailPrintTours
		{
			get
			{
				return this.GetTable<DetailPrintTour>();
			}
		}
		
		public System.Data.Linq.Table<TempBookCar> TempBookCars
		{
			get
			{
				return this.GetTable<TempBookCar>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationRole")]
	public partial class ApplicationRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ApplicationRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour")]
	public partial class Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TourID;
		
		private string _Name;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<bool> _Enable;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<int> _PriceSale;
		
		private System.Nullable<int> _PriceVTQ;
		
		private System.Nullable<int> _PriceSaleChild;
		
		private System.Nullable<int> _MinPax;
		
		private System.Nullable<int> _MaxPax;
		
		private EntityRef<GroupTour> _GroupTour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIDChanging(int value);
    partial void OnTourIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnEnableChanging(System.Nullable<bool> value);
    partial void OnEnableChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnPriceSaleChanging(System.Nullable<int> value);
    partial void OnPriceSaleChanged();
    partial void OnPriceVTQChanging(System.Nullable<int> value);
    partial void OnPriceVTQChanged();
    partial void OnPriceSaleChildChanging(System.Nullable<int> value);
    partial void OnPriceSaleChildChanged();
    partial void OnMinPaxChanging(System.Nullable<int> value);
    partial void OnMinPaxChanged();
    partial void OnMaxPaxChanging(System.Nullable<int> value);
    partial void OnMaxPaxChanged();
    #endregion
		
		public Tour()
		{
			this._GroupTour = default(EntityRef<GroupTour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TourID
		{
			get
			{
				return this._TourID;
			}
			set
			{
				if ((this._TourID != value))
				{
					this.OnTourIDChanging(value);
					this.SendPropertyChanging();
					this._TourID = value;
					this.SendPropertyChanged("TourID");
					this.OnTourIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._GroupTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit")]
		public System.Nullable<bool> Enable
		{
			get
			{
				return this._Enable;
			}
			set
			{
				if ((this._Enable != value))
				{
					this.OnEnableChanging(value);
					this.SendPropertyChanging();
					this._Enable = value;
					this.SendPropertyChanged("Enable");
					this.OnEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSale", DbType="Int")]
		public System.Nullable<int> PriceSale
		{
			get
			{
				return this._PriceSale;
			}
			set
			{
				if ((this._PriceSale != value))
				{
					this.OnPriceSaleChanging(value);
					this.SendPropertyChanging();
					this._PriceSale = value;
					this.SendPropertyChanged("PriceSale");
					this.OnPriceSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceVTQ", DbType="Int")]
		public System.Nullable<int> PriceVTQ
		{
			get
			{
				return this._PriceVTQ;
			}
			set
			{
				if ((this._PriceVTQ != value))
				{
					this.OnPriceVTQChanging(value);
					this.SendPropertyChanging();
					this._PriceVTQ = value;
					this.SendPropertyChanged("PriceVTQ");
					this.OnPriceVTQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSaleChild", DbType="Int")]
		public System.Nullable<int> PriceSaleChild
		{
			get
			{
				return this._PriceSaleChild;
			}
			set
			{
				if ((this._PriceSaleChild != value))
				{
					this.OnPriceSaleChildChanging(value);
					this.SendPropertyChanging();
					this._PriceSaleChild = value;
					this.SendPropertyChanged("PriceSaleChild");
					this.OnPriceSaleChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPax", DbType="Int")]
		public System.Nullable<int> MinPax
		{
			get
			{
				return this._MinPax;
			}
			set
			{
				if ((this._MinPax != value))
				{
					this.OnMinPaxChanging(value);
					this.SendPropertyChanging();
					this._MinPax = value;
					this.SendPropertyChanged("MinPax");
					this.OnMinPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPax", DbType="Int")]
		public System.Nullable<int> MaxPax
		{
			get
			{
				return this._MaxPax;
			}
			set
			{
				if ((this._MaxPax != value))
				{
					this.OnMaxPaxChanging(value);
					this.SendPropertyChanging();
					this._MaxPax = value;
					this.SendPropertyChanged("MaxPax");
					this.OnMaxPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupTour_Tour", Storage="_GroupTour", ThisKey="GroupID", OtherKey="GroupID", IsForeignKey=true)]
		public GroupTour GroupTour
		{
			get
			{
				return this._GroupTour.Entity;
			}
			set
			{
				GroupTour previousValue = this._GroupTour.Entity;
				if (((previousValue != value) 
							|| (this._GroupTour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupTour.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._GroupTour.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._GroupID = value.GroupID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("GroupTour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationUser")]
	public partial class ApplicationUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private string _Phone;
		
		private System.Nullable<bool> _ConfirmMail;
		
		private System.Nullable<bool> _ConfirmPhone;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<bool> _Locked;
		
		private System.Nullable<System.DateTime> _LockDate;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _LastUpdate;
		
		private string _UpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnConfirmMailChanging(System.Nullable<bool> value);
    partial void OnConfirmMailChanged();
    partial void OnConfirmPhoneChanging(System.Nullable<bool> value);
    partial void OnConfirmPhoneChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnLockedChanging(System.Nullable<bool> value);
    partial void OnLockedChanged();
    partial void OnLockDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLockDateChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    #endregion
		
		public ApplicationUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(128)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(128)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmMail", DbType="Bit")]
		public System.Nullable<bool> ConfirmMail
		{
			get
			{
				return this._ConfirmMail;
			}
			set
			{
				if ((this._ConfirmMail != value))
				{
					this.OnConfirmMailChanging(value);
					this.SendPropertyChanging();
					this._ConfirmMail = value;
					this.SendPropertyChanged("ConfirmMail");
					this.OnConfirmMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmPhone", DbType="Bit")]
		public System.Nullable<bool> ConfirmPhone
		{
			get
			{
				return this._ConfirmPhone;
			}
			set
			{
				if ((this._ConfirmPhone != value))
				{
					this.OnConfirmPhoneChanging(value);
					this.SendPropertyChanging();
					this._ConfirmPhone = value;
					this.SendPropertyChanged("ConfirmPhone");
					this.OnConfirmPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit")]
		public System.Nullable<bool> Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockDate
		{
			get
			{
				return this._LockDate;
			}
			set
			{
				if ((this._LockDate != value))
				{
					this.OnLockDateChanging(value);
					this.SendPropertyChanging();
					this._LockDate = value;
					this.SendPropertyChanged("LockDate");
					this.OnLockDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="NVarChar(50)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationUserRole")]
	public partial class ApplicationUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private int _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public ApplicationUserRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _TourID;
		
		private System.Nullable<int> _PartnerID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<float> _Pax;
		
		private string _PickUp;
		
		private string _Room;
		
		private string _CustomName;
		
		private System.Nullable<int> _PartnerPrice;
		
		private System.Nullable<int> _PriceReceive;
		
		private System.Nullable<int> _PriceSale;
		
		private System.Nullable<int> _PriceVTQ;
		
		private System.Nullable<int> _PromotionMoney;
		
		private System.Nullable<int> _PromotionPercent;
		
		private string _StaffID;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private string _Note;
		
		private string _ServiceType;
		
		private System.Nullable<int> _Total;
		
		private System.Nullable<bool> _IsCancel;
		
		private string _CreateBy;
		
		private string _UpdateBy;
		
		private System.Nullable<System.DateTime> _LastUpdate;
		
		private System.Nullable<bool> _IsBooked;
		
		private System.Nullable<System.DateTime> _FinishDate;
		
		private System.Nullable<bool> _IsPayment;
		
		private System.Nullable<System.DateTime> _DatePayment;
		
		private string _ServiceName;
		
		private System.Nullable<float> _PaxChild;
		
		private System.Nullable<int> _PriceReChild;
		
		private System.Nullable<bool> _IsDone;
		
		private string _DoneBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTourIDChanging(System.Nullable<int> value);
    partial void OnTourIDChanged();
    partial void OnPartnerIDChanging(System.Nullable<int> value);
    partial void OnPartnerIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnPaxChanging(System.Nullable<float> value);
    partial void OnPaxChanged();
    partial void OnPickUpChanging(string value);
    partial void OnPickUpChanged();
    partial void OnRoomChanging(string value);
    partial void OnRoomChanged();
    partial void OnCustomNameChanging(string value);
    partial void OnCustomNameChanged();
    partial void OnPartnerPriceChanging(System.Nullable<int> value);
    partial void OnPartnerPriceChanged();
    partial void OnPriceReceiveChanging(System.Nullable<int> value);
    partial void OnPriceReceiveChanged();
    partial void OnPriceSaleChanging(System.Nullable<int> value);
    partial void OnPriceSaleChanged();
    partial void OnPriceVTQChanging(System.Nullable<int> value);
    partial void OnPriceVTQChanged();
    partial void OnPromotionMoneyChanging(System.Nullable<int> value);
    partial void OnPromotionMoneyChanged();
    partial void OnPromotionPercentChanging(System.Nullable<int> value);
    partial void OnPromotionPercentChanged();
    partial void OnStaffIDChanging(string value);
    partial void OnStaffIDChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnServiceTypeChanging(string value);
    partial void OnServiceTypeChanged();
    partial void OnTotalChanging(System.Nullable<int> value);
    partial void OnTotalChanged();
    partial void OnIsCancelChanging(System.Nullable<bool> value);
    partial void OnIsCancelChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    partial void OnLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateChanged();
    partial void OnIsBookedChanging(System.Nullable<bool> value);
    partial void OnIsBookedChanged();
    partial void OnFinishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishDateChanged();
    partial void OnIsPaymentChanging(System.Nullable<bool> value);
    partial void OnIsPaymentChanged();
    partial void OnDatePaymentChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePaymentChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnPaxChildChanging(System.Nullable<float> value);
    partial void OnPaxChildChanged();
    partial void OnPriceReChildChanging(System.Nullable<int> value);
    partial void OnPriceReChildChanged();
    partial void OnIsDoneChanging(System.Nullable<bool> value);
    partial void OnIsDoneChanged();
    partial void OnDoneByChanging(string value);
    partial void OnDoneByChanged();
    #endregion
		
		public Book()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourID", DbType="Int")]
		public System.Nullable<int> TourID
		{
			get
			{
				return this._TourID;
			}
			set
			{
				if ((this._TourID != value))
				{
					this.OnTourIDChanging(value);
					this.SendPropertyChanging();
					this._TourID = value;
					this.SendPropertyChanged("TourID");
					this.OnTourIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerID", DbType="Int")]
		public System.Nullable<int> PartnerID
		{
			get
			{
				return this._PartnerID;
			}
			set
			{
				if ((this._PartnerID != value))
				{
					this.OnPartnerIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerID = value;
					this.SendPropertyChanged("PartnerID");
					this.OnPartnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pax", DbType="Float")]
		public System.Nullable<float> Pax
		{
			get
			{
				return this._Pax;
			}
			set
			{
				if ((this._Pax != value))
				{
					this.OnPaxChanging(value);
					this.SendPropertyChanging();
					this._Pax = value;
					this.SendPropertyChanged("Pax");
					this.OnPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickUp", DbType="NVarChar(50)")]
		public string PickUp
		{
			get
			{
				return this._PickUp;
			}
			set
			{
				if ((this._PickUp != value))
				{
					this.OnPickUpChanging(value);
					this.SendPropertyChanging();
					this._PickUp = value;
					this.SendPropertyChanged("PickUp");
					this.OnPickUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="NVarChar(50)")]
		public string Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this.OnRoomChanging(value);
					this.SendPropertyChanging();
					this._Room = value;
					this.SendPropertyChanged("Room");
					this.OnRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomName", DbType="NVarChar(50)")]
		public string CustomName
		{
			get
			{
				return this._CustomName;
			}
			set
			{
				if ((this._CustomName != value))
				{
					this.OnCustomNameChanging(value);
					this.SendPropertyChanging();
					this._CustomName = value;
					this.SendPropertyChanged("CustomName");
					this.OnCustomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerPrice", DbType="Int")]
		public System.Nullable<int> PartnerPrice
		{
			get
			{
				return this._PartnerPrice;
			}
			set
			{
				if ((this._PartnerPrice != value))
				{
					this.OnPartnerPriceChanging(value);
					this.SendPropertyChanging();
					this._PartnerPrice = value;
					this.SendPropertyChanged("PartnerPrice");
					this.OnPartnerPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceReceive", DbType="Int")]
		public System.Nullable<int> PriceReceive
		{
			get
			{
				return this._PriceReceive;
			}
			set
			{
				if ((this._PriceReceive != value))
				{
					this.OnPriceReceiveChanging(value);
					this.SendPropertyChanging();
					this._PriceReceive = value;
					this.SendPropertyChanged("PriceReceive");
					this.OnPriceReceiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSale", DbType="Int")]
		public System.Nullable<int> PriceSale
		{
			get
			{
				return this._PriceSale;
			}
			set
			{
				if ((this._PriceSale != value))
				{
					this.OnPriceSaleChanging(value);
					this.SendPropertyChanging();
					this._PriceSale = value;
					this.SendPropertyChanged("PriceSale");
					this.OnPriceSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceVTQ", DbType="Int")]
		public System.Nullable<int> PriceVTQ
		{
			get
			{
				return this._PriceVTQ;
			}
			set
			{
				if ((this._PriceVTQ != value))
				{
					this.OnPriceVTQChanging(value);
					this.SendPropertyChanging();
					this._PriceVTQ = value;
					this.SendPropertyChanged("PriceVTQ");
					this.OnPriceVTQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionMoney", DbType="Int")]
		public System.Nullable<int> PromotionMoney
		{
			get
			{
				return this._PromotionMoney;
			}
			set
			{
				if ((this._PromotionMoney != value))
				{
					this.OnPromotionMoneyChanging(value);
					this.SendPropertyChanging();
					this._PromotionMoney = value;
					this.SendPropertyChanged("PromotionMoney");
					this.OnPromotionMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionPercent", DbType="Int")]
		public System.Nullable<int> PromotionPercent
		{
			get
			{
				return this._PromotionPercent;
			}
			set
			{
				if ((this._PromotionPercent != value))
				{
					this.OnPromotionPercentChanging(value);
					this.SendPropertyChanging();
					this._PromotionPercent = value;
					this.SendPropertyChanged("PromotionPercent");
					this.OnPromotionPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="NVarChar(50)")]
		public string StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="NVarChar(MAX)")]
		public string ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int")]
		public System.Nullable<int> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancel", DbType="Bit")]
		public System.Nullable<bool> IsCancel
		{
			get
			{
				return this._IsCancel;
			}
			set
			{
				if ((this._IsCancel != value))
				{
					this.OnIsCancelChanging(value);
					this.SendPropertyChanging();
					this._IsCancel = value;
					this.SendPropertyChanged("IsCancel");
					this.OnIsCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="NVarChar(50)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="NVarChar(50)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBooked", DbType="Bit")]
		public System.Nullable<bool> IsBooked
		{
			get
			{
				return this._IsBooked;
			}
			set
			{
				if ((this._IsBooked != value))
				{
					this.OnIsBookedChanging(value);
					this.SendPropertyChanging();
					this._IsBooked = value;
					this.SendPropertyChanged("IsBooked");
					this.OnIsBookedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishDate
		{
			get
			{
				return this._FinishDate;
			}
			set
			{
				if ((this._FinishDate != value))
				{
					this.OnFinishDateChanging(value);
					this.SendPropertyChanging();
					this._FinishDate = value;
					this.SendPropertyChanged("FinishDate");
					this.OnFinishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayment", DbType="Bit")]
		public System.Nullable<bool> IsPayment
		{
			get
			{
				return this._IsPayment;
			}
			set
			{
				if ((this._IsPayment != value))
				{
					this.OnIsPaymentChanging(value);
					this.SendPropertyChanging();
					this._IsPayment = value;
					this.SendPropertyChanged("IsPayment");
					this.OnIsPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePayment", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePayment
		{
			get
			{
				return this._DatePayment;
			}
			set
			{
				if ((this._DatePayment != value))
				{
					this.OnDatePaymentChanging(value);
					this.SendPropertyChanging();
					this._DatePayment = value;
					this.SendPropertyChanged("DatePayment");
					this.OnDatePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(MAX)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaxChild", DbType="Float")]
		public System.Nullable<float> PaxChild
		{
			get
			{
				return this._PaxChild;
			}
			set
			{
				if ((this._PaxChild != value))
				{
					this.OnPaxChildChanging(value);
					this.SendPropertyChanging();
					this._PaxChild = value;
					this.SendPropertyChanged("PaxChild");
					this.OnPaxChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceReChild", DbType="Int")]
		public System.Nullable<int> PriceReChild
		{
			get
			{
				return this._PriceReChild;
			}
			set
			{
				if ((this._PriceReChild != value))
				{
					this.OnPriceReChildChanging(value);
					this.SendPropertyChanging();
					this._PriceReChild = value;
					this.SendPropertyChanged("PriceReChild");
					this.OnPriceReChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit")]
		public System.Nullable<bool> IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this.OnIsDoneChanging(value);
					this.SendPropertyChanging();
					this._IsDone = value;
					this.SendPropertyChanged("IsDone");
					this.OnIsDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoneBy", DbType="NVarChar(50)")]
		public string DoneBy
		{
			get
			{
				return this._DoneBy;
			}
			set
			{
				if ((this._DoneBy != value))
				{
					this.OnDoneByChanging(value);
					this.SendPropertyChanging();
					this._DoneBy = value;
					this.SendPropertyChanged("DoneBy");
					this.OnDoneByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Car")]
	public partial class Car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarID;
		
		private string _Code;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _Max;
		
		private System.Nullable<int> _StaffID;
		
		private string _Note;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarIDChanging(int value);
    partial void OnCarIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnMaxChanging(System.Nullable<int> value);
    partial void OnMaxChanged();
    partial void OnStaffIDChanging(System.Nullable<int> value);
    partial void OnStaffIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public Car()
		{
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CarID
		{
			get
			{
				return this._CarID;
			}
			set
			{
				if ((this._CarID != value))
				{
					this.OnCarIDChanging(value);
					this.SendPropertyChanging();
					this._CarID = value;
					this.SendPropertyChanged("CarID");
					this.OnCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max", DbType="Int")]
		public System.Nullable<int> Max
		{
			get
			{
				return this._Max;
			}
			set
			{
				if ((this._Max != value))
				{
					this.OnMaxChanging(value);
					this.SendPropertyChanging();
					this._Max = value;
					this.SendPropertyChanged("Max");
					this.OnMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="Int")]
		public System.Nullable<int> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(20)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Car", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Cars.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Cars.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupTour")]
	public partial class GroupTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<int> _MinPax;
		
		private System.Nullable<int> _MaxPax;
		
		private System.Nullable<bool> _Enable;
		
		private System.Nullable<int> _Type;
		
		private string _Note;
		
		private System.Nullable<int> _Priority;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnMinPaxChanging(System.Nullable<int> value);
    partial void OnMinPaxChanged();
    partial void OnMaxPaxChanging(System.Nullable<int> value);
    partial void OnMaxPaxChanged();
    partial void OnEnableChanging(System.Nullable<bool> value);
    partial void OnEnableChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    #endregion
		
		public GroupTour()
		{
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPax", DbType="Int")]
		public System.Nullable<int> MinPax
		{
			get
			{
				return this._MinPax;
			}
			set
			{
				if ((this._MinPax != value))
				{
					this.OnMinPaxChanging(value);
					this.SendPropertyChanging();
					this._MinPax = value;
					this.SendPropertyChanged("MinPax");
					this.OnMinPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPax", DbType="Int")]
		public System.Nullable<int> MaxPax
		{
			get
			{
				return this._MaxPax;
			}
			set
			{
				if ((this._MaxPax != value))
				{
					this.OnMaxPaxChanging(value);
					this.SendPropertyChanging();
					this._MaxPax = value;
					this.SendPropertyChanged("MaxPax");
					this.OnMaxPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit")]
		public System.Nullable<bool> Enable
		{
			get
			{
				return this._Enable;
			}
			set
			{
				if ((this._Enable != value))
				{
					this.OnEnableChanging(value);
					this.SendPropertyChanging();
					this._Enable = value;
					this.SendPropertyChanged("Enable");
					this.OnEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupTour_Tour", Storage="_Tours", ThisKey="GroupID", OtherKey="GroupID")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.GroupTour = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.GroupTour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Partner")]
	public partial class Partner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PartnerID;
		
		private string _PartnerCode;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private System.Nullable<int> _Status;
		
		private string _Note;
		
		private System.Nullable<int> _GroupID;
		
		private string _Line;
		
		private EntitySet<Staff> _Staffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartnerIDChanging(int value);
    partial void OnPartnerIDChanged();
    partial void OnPartnerCodeChanging(string value);
    partial void OnPartnerCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    #endregion
		
		public Partner()
		{
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PartnerID
		{
			get
			{
				return this._PartnerID;
			}
			set
			{
				if ((this._PartnerID != value))
				{
					this.OnPartnerIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerID = value;
					this.SendPropertyChanged("PartnerID");
					this.OnPartnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerCode", DbType="NVarChar(50)")]
		public string PartnerCode
		{
			get
			{
				return this._PartnerCode;
			}
			set
			{
				if ((this._PartnerCode != value))
				{
					this.OnPartnerCodeChanging(value);
					this.SendPropertyChanging();
					this._PartnerCode = value;
					this.SendPropertyChanged("PartnerCode");
					this.OnPartnerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line", DbType="NVarChar(32)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_Staff", Storage="_Staffs", ThisKey="PartnerID", OtherKey="PartnerID")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Partner = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Partner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceType")]
	public partial class ServiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<int> _HotelID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnTourIDChanging(System.Nullable<int> value);
    partial void OnTourIDChanged();
    #endregion
		
		public ServiceType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelID", DbType="Int")]
		public System.Nullable<int> TourID
		{
			get
			{
				return this._HotelID;
			}
			set
			{
				if ((this._HotelID != value))
				{
					this.OnTourIDChanging(value);
					this.SendPropertyChanging();
					this._HotelID = value;
					this.SendPropertyChanged("TourID");
					this.OnTourIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private System.Nullable<int> _PartnerID;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _Kind;
		
		private string _Note;
		
		private string _PSID;
		
		private EntitySet<Car> _Cars;
		
		private EntityRef<Partner> _Partner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPartnerIDChanging(System.Nullable<int> value);
    partial void OnPartnerIDChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnKindChanging(System.Nullable<int> value);
    partial void OnKindChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnPSIDChanging(string value);
    partial void OnPSIDChanged();
    #endregion
		
		public Staff()
		{
			this._Cars = new EntitySet<Car>(new Action<Car>(this.attach_Cars), new Action<Car>(this.detach_Cars));
			this._Partner = default(EntityRef<Partner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerID", DbType="Int")]
		public System.Nullable<int> PartnerID
		{
			get
			{
				return this._PartnerID;
			}
			set
			{
				if ((this._PartnerID != value))
				{
					if (this._Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartnerIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerID = value;
					this.SendPropertyChanged("PartnerID");
					this.OnPartnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="Int")]
		public System.Nullable<int> Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this.OnKindChanging(value);
					this.SendPropertyChanging();
					this._Kind = value;
					this.SendPropertyChanged("Kind");
					this.OnKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PSID
		{
			get
			{
				return this._PSID;
			}
			set
			{
				if ((this._PSID != value))
				{
					this.OnPSIDChanging(value);
					this.SendPropertyChanging();
					this._PSID = value;
					this.SendPropertyChanged("PSID");
					this.OnPSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Car", Storage="_Cars", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Car> Cars
		{
			get
			{
				return this._Cars;
			}
			set
			{
				this._Cars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_Staff", Storage="_Partner", ThisKey="PartnerID", OtherKey="PartnerID", IsForeignKey=true)]
		public Partner Partner
		{
			get
			{
				return this._Partner.Entity;
			}
			set
			{
				Partner previousValue = this._Partner.Entity;
				if (((previousValue != value) 
							|| (this._Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partner.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Partner.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._PartnerID = value.PartnerID;
					}
					else
					{
						this._PartnerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Partner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cars(Car entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Cars(Car entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class CarType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TypeName;
		
		private System.Nullable<bool> _Enable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnEnableChanging(System.Nullable<bool> value);
    partial void OnEnableChanged();
    #endregion
		
		public CarType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit")]
		public System.Nullable<bool> Enable
		{
			get
			{
				return this._Enable;
			}
			set
			{
				if ((this._Enable != value))
				{
					this.OnEnableChanging(value);
					this.SendPropertyChanging();
					this._Enable = value;
					this.SendPropertyChanged("Enable");
					this.OnEnableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class GroupPartner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupPartnerID;
		
		private string _GroupName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupPartnerIDChanging(int value);
    partial void OnGroupPartnerIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public GroupPartner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupPartnerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupPartnerID
		{
			get
			{
				return this._GroupPartnerID;
			}
			set
			{
				if ((this._GroupPartnerID != value))
				{
					this.OnGroupPartnerIDChanging(value);
					this.SendPropertyChanging();
					this._GroupPartnerID = value;
					this.SendPropertyChanged("GroupPartnerID");
					this.OnGroupPartnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Price : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Key;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _TourID;
		
		private System.Nullable<int> _PriceRe;
		
		private System.Nullable<int> _PriceVTQ;
		
		private System.Nullable<int> _PriceReChild;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(int value);
    partial void OnKeyChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnTourIDChanging(System.Nullable<int> value);
    partial void OnTourIDChanged();
    partial void OnPriceReChanging(System.Nullable<int> value);
    partial void OnPriceReChanged();
    partial void OnPriceVTQChanging(System.Nullable<int> value);
    partial void OnPriceVTQChanged();
    partial void OnPriceReChildChanging(System.Nullable<int> value);
    partial void OnPriceReChildChanged();
    #endregion
		
		public Price()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourID", DbType="Int")]
		public System.Nullable<int> TourID
		{
			get
			{
				return this._TourID;
			}
			set
			{
				if ((this._TourID != value))
				{
					this.OnTourIDChanging(value);
					this.SendPropertyChanging();
					this._TourID = value;
					this.SendPropertyChanged("TourID");
					this.OnTourIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceRe", DbType="Int")]
		public System.Nullable<int> PriceRe
		{
			get
			{
				return this._PriceRe;
			}
			set
			{
				if ((this._PriceRe != value))
				{
					this.OnPriceReChanging(value);
					this.SendPropertyChanging();
					this._PriceRe = value;
					this.SendPropertyChanged("PriceRe");
					this.OnPriceReChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceVTQ", DbType="Int")]
		public System.Nullable<int> PriceVTQ
		{
			get
			{
				return this._PriceVTQ;
			}
			set
			{
				if ((this._PriceVTQ != value))
				{
					this.OnPriceVTQChanging(value);
					this.SendPropertyChanging();
					this._PriceVTQ = value;
					this.SendPropertyChanged("PriceVTQ");
					this.OnPriceVTQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceReChild", DbType="Int")]
		public System.Nullable<int> PriceReChild
		{
			get
			{
				return this._PriceReChild;
			}
			set
			{
				if ((this._PriceReChild != value))
				{
					this.OnPriceReChildChanging(value);
					this.SendPropertyChanging();
					this._PriceReChild = value;
					this.SendPropertyChanged("PriceReChild");
					this.OnPriceReChildChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrintTour")]
	public partial class PrintTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OrganizationID;
		
		private System.Nullable<int> _TourID;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<int> _Guide1;
		
		private string _Guide2;
		
		private System.Nullable<int> _Driver1;
		
		private string _Driver2;
		
		private string _CarCode;
		
		private System.Nullable<System.DateTime> _DatePrint;
		
		private System.Nullable<double> _TotalPax;
		
		private EntitySet<DetailPrintTour> _DetailPrintTours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrganizationIDChanging(System.Nullable<int> value);
    partial void OnOrganizationIDChanged();
    partial void OnTourIDChanging(System.Nullable<int> value);
    partial void OnTourIDChanged();
    partial void OnDateStartChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartChanged();
    partial void OnGuide1Changing(System.Nullable<int> value);
    partial void OnGuide1Changed();
    partial void OnGuide2Changing(string value);
    partial void OnGuide2Changed();
    partial void OnDriver1Changing(System.Nullable<int> value);
    partial void OnDriver1Changed();
    partial void OnDriver2Changing(string value);
    partial void OnDriver2Changed();
    partial void OnCarCodeChanging(string value);
    partial void OnCarCodeChanged();
    partial void OnDatePrintChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePrintChanged();
    partial void OnTotalPaxChanging(System.Nullable<double> value);
    partial void OnTotalPaxChanged();
    #endregion
		
		public PrintTour()
		{
			this._DetailPrintTours = new EntitySet<DetailPrintTour>(new Action<DetailPrintTour>(this.attach_DetailPrintTours), new Action<DetailPrintTour>(this.detach_DetailPrintTours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationID", DbType="Int")]
		public System.Nullable<int> OrganizationID
		{
			get
			{
				return this._OrganizationID;
			}
			set
			{
				if ((this._OrganizationID != value))
				{
					this.OnOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizationID = value;
					this.SendPropertyChanged("OrganizationID");
					this.OnOrganizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourID", DbType="Int")]
		public System.Nullable<int> TourID
		{
			get
			{
				return this._TourID;
			}
			set
			{
				if ((this._TourID != value))
				{
					this.OnTourIDChanging(value);
					this.SendPropertyChanging();
					this._TourID = value;
					this.SendPropertyChanged("TourID");
					this.OnTourIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="Date")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guide1", DbType="Int")]
		public System.Nullable<int> Guide1
		{
			get
			{
				return this._Guide1;
			}
			set
			{
				if ((this._Guide1 != value))
				{
					this.OnGuide1Changing(value);
					this.SendPropertyChanging();
					this._Guide1 = value;
					this.SendPropertyChanged("Guide1");
					this.OnGuide1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guide2", DbType="NVarChar(32)")]
		public string Guide2
		{
			get
			{
				return this._Guide2;
			}
			set
			{
				if ((this._Guide2 != value))
				{
					this.OnGuide2Changing(value);
					this.SendPropertyChanging();
					this._Guide2 = value;
					this.SendPropertyChanged("Guide2");
					this.OnGuide2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver1", DbType="Int")]
		public System.Nullable<int> Driver1
		{
			get
			{
				return this._Driver1;
			}
			set
			{
				if ((this._Driver1 != value))
				{
					this.OnDriver1Changing(value);
					this.SendPropertyChanging();
					this._Driver1 = value;
					this.SendPropertyChanged("Driver1");
					this.OnDriver1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver2", DbType="NVarChar(32)")]
		public string Driver2
		{
			get
			{
				return this._Driver2;
			}
			set
			{
				if ((this._Driver2 != value))
				{
					this.OnDriver2Changing(value);
					this.SendPropertyChanging();
					this._Driver2 = value;
					this.SendPropertyChanged("Driver2");
					this.OnDriver2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarCode", DbType="NVarChar(16)")]
		public string CarCode
		{
			get
			{
				return this._CarCode;
			}
			set
			{
				if ((this._CarCode != value))
				{
					this.OnCarCodeChanging(value);
					this.SendPropertyChanging();
					this._CarCode = value;
					this.SendPropertyChanged("CarCode");
					this.OnCarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePrint", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePrint
		{
			get
			{
				return this._DatePrint;
			}
			set
			{
				if ((this._DatePrint != value))
				{
					this.OnDatePrintChanging(value);
					this.SendPropertyChanging();
					this._DatePrint = value;
					this.SendPropertyChanged("DatePrint");
					this.OnDatePrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPax", DbType="Float")]
		public System.Nullable<double> TotalPax
		{
			get
			{
				return this._TotalPax;
			}
			set
			{
				if ((this._TotalPax != value))
				{
					this.OnTotalPaxChanging(value);
					this.SendPropertyChanging();
					this._TotalPax = value;
					this.SendPropertyChanged("TotalPax");
					this.OnTotalPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTour_DetailPrintTour", Storage="_DetailPrintTours", ThisKey="ID", OtherKey="PrintID")]
		public EntitySet<DetailPrintTour> DetailPrintTours
		{
			get
			{
				return this._DetailPrintTours;
			}
			set
			{
				this._DetailPrintTours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailPrintTours(DetailPrintTour entity)
		{
			this.SendPropertyChanging();
			entity.PrintTour = this;
		}
		
		private void detach_DetailPrintTours(DetailPrintTour entity)
		{
			this.SendPropertyChanging();
			entity.PrintTour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailPrintTour")]
	public partial class DetailPrintTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PrintID;
		
		private System.Nullable<int> _BookID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<PrintTour> _PrintTour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPrintIDChanging(System.Nullable<int> value);
    partial void OnPrintIDChanged();
    partial void OnBookIDChanging(System.Nullable<int> value);
    partial void OnBookIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public DetailPrintTour()
		{
			this._PrintTour = default(EntityRef<PrintTour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintID", DbType="Int")]
		public System.Nullable<int> PrintID
		{
			get
			{
				return this._PrintID;
			}
			set
			{
				if ((this._PrintID != value))
				{
					if (this._PrintTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrintIDChanging(value);
					this.SendPropertyChanging();
					this._PrintID = value;
					this.SendPropertyChanged("PrintID");
					this.OnPrintIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int")]
		public System.Nullable<int> BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTour_DetailPrintTour", Storage="_PrintTour", ThisKey="PrintID", OtherKey="ID", IsForeignKey=true)]
		public PrintTour PrintTour
		{
			get
			{
				return this._PrintTour.Entity;
			}
			set
			{
				PrintTour previousValue = this._PrintTour.Entity;
				if (((previousValue != value) 
							|| (this._PrintTour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintTour.Entity = null;
						previousValue.DetailPrintTours.Remove(this);
					}
					this._PrintTour.Entity = value;
					if ((value != null))
					{
						value.DetailPrintTours.Add(this);
						this._PrintID = value.ID;
					}
					else
					{
						this._PrintID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrintTour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TempBookCar")]
	public partial class TempBookCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<int> _BookID;
		
		private System.Nullable<bool> _Car1;
		
		private System.Nullable<bool> _Car2;
		
		private System.Nullable<bool> _Car3;
		
		private System.Nullable<bool> _Car4;
		
		private System.Nullable<bool> _Car5;
		
		private System.Nullable<bool> _Car6;
		
		private System.Nullable<bool> _Car7;
		
		private System.Nullable<bool> _Car8;
		
		private System.Nullable<bool> _Car9;
		
		private System.Nullable<bool> _Car10;
		
		private System.Nullable<bool> _Added;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnBookIDChanging(System.Nullable<int> value);
    partial void OnBookIDChanged();
    partial void OnCar1Changing(System.Nullable<bool> value);
    partial void OnCar1Changed();
    partial void OnCar2Changing(System.Nullable<bool> value);
    partial void OnCar2Changed();
    partial void OnCar3Changing(System.Nullable<bool> value);
    partial void OnCar3Changed();
    partial void OnCar4Changing(System.Nullable<bool> value);
    partial void OnCar4Changed();
    partial void OnCar5Changing(System.Nullable<bool> value);
    partial void OnCar5Changed();
    partial void OnCar6Changing(System.Nullable<bool> value);
    partial void OnCar6Changed();
    partial void OnCar7Changing(System.Nullable<bool> value);
    partial void OnCar7Changed();
    partial void OnCar8Changing(System.Nullable<bool> value);
    partial void OnCar8Changed();
    partial void OnCar9Changing(System.Nullable<bool> value);
    partial void OnCar9Changed();
    partial void OnCar10Changing(System.Nullable<bool> value);
    partial void OnCar10Changed();
    partial void OnAddedChanging(System.Nullable<bool> value);
    partial void OnAddedChanged();
    #endregion
		
		public TempBookCar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int")]
		public System.Nullable<int> BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car1", DbType="Bit")]
		public System.Nullable<bool> Car1
		{
			get
			{
				return this._Car1;
			}
			set
			{
				if ((this._Car1 != value))
				{
					this.OnCar1Changing(value);
					this.SendPropertyChanging();
					this._Car1 = value;
					this.SendPropertyChanged("Car1");
					this.OnCar1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car2", DbType="Bit")]
		public System.Nullable<bool> Car2
		{
			get
			{
				return this._Car2;
			}
			set
			{
				if ((this._Car2 != value))
				{
					this.OnCar2Changing(value);
					this.SendPropertyChanging();
					this._Car2 = value;
					this.SendPropertyChanged("Car2");
					this.OnCar2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car3", DbType="Bit")]
		public System.Nullable<bool> Car3
		{
			get
			{
				return this._Car3;
			}
			set
			{
				if ((this._Car3 != value))
				{
					this.OnCar3Changing(value);
					this.SendPropertyChanging();
					this._Car3 = value;
					this.SendPropertyChanged("Car3");
					this.OnCar3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car4", DbType="Bit")]
		public System.Nullable<bool> Car4
		{
			get
			{
				return this._Car4;
			}
			set
			{
				if ((this._Car4 != value))
				{
					this.OnCar4Changing(value);
					this.SendPropertyChanging();
					this._Car4 = value;
					this.SendPropertyChanged("Car4");
					this.OnCar4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car5", DbType="Bit")]
		public System.Nullable<bool> Car5
		{
			get
			{
				return this._Car5;
			}
			set
			{
				if ((this._Car5 != value))
				{
					this.OnCar5Changing(value);
					this.SendPropertyChanging();
					this._Car5 = value;
					this.SendPropertyChanged("Car5");
					this.OnCar5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car6", DbType="Bit")]
		public System.Nullable<bool> Car6
		{
			get
			{
				return this._Car6;
			}
			set
			{
				if ((this._Car6 != value))
				{
					this.OnCar6Changing(value);
					this.SendPropertyChanging();
					this._Car6 = value;
					this.SendPropertyChanged("Car6");
					this.OnCar6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car7", DbType="Bit")]
		public System.Nullable<bool> Car7
		{
			get
			{
				return this._Car7;
			}
			set
			{
				if ((this._Car7 != value))
				{
					this.OnCar7Changing(value);
					this.SendPropertyChanging();
					this._Car7 = value;
					this.SendPropertyChanged("Car7");
					this.OnCar7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car8", DbType="Bit")]
		public System.Nullable<bool> Car8
		{
			get
			{
				return this._Car8;
			}
			set
			{
				if ((this._Car8 != value))
				{
					this.OnCar8Changing(value);
					this.SendPropertyChanging();
					this._Car8 = value;
					this.SendPropertyChanged("Car8");
					this.OnCar8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car9", DbType="Bit")]
		public System.Nullable<bool> Car9
		{
			get
			{
				return this._Car9;
			}
			set
			{
				if ((this._Car9 != value))
				{
					this.OnCar9Changing(value);
					this.SendPropertyChanging();
					this._Car9 = value;
					this.SendPropertyChanged("Car9");
					this.OnCar9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car10", DbType="Bit")]
		public System.Nullable<bool> Car10
		{
			get
			{
				return this._Car10;
			}
			set
			{
				if ((this._Car10 != value))
				{
					this.OnCar10Changing(value);
					this.SendPropertyChanging();
					this._Car10 = value;
					this.SendPropertyChanged("Car10");
					this.OnCar10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="Bit")]
		public System.Nullable<bool> Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this.OnAddedChanging(value);
					this.SendPropertyChanging();
					this._Added = value;
					this.SendPropertyChanged("Added");
					this.OnAddedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
